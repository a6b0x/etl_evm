name: Docker Build and Push

# 触发工作流的事件：当有代码推送到 main 分支时
on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # 定义镜像名称为 GHCR 的格式。${{ github.repository }} 会自动解析为 'owner/repo_name'。
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    # 任务运行的环境
    runs-on: ubuntu-latest
    steps:
      # 步骤1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤2: 设置 Docker Buildx，这是一个高级的构建器
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤3: 登录到 GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # 使用仓库所有者的名称
          password: ${{ secrets.GITHUB_TOKEN }}    # 使用自动生成的 GITHUB_TOKEN

      # 步骤4: 构建并推送 Docker 镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./etl_evm  # 指定 Dockerfile 所在的目录作为构建上下文
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest